// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ILLEGAL-0]
	_ = x[EOF-1]
	_ = x[IDENTIFIER-2]
	_ = x[INT-3]
	_ = x[STRING-4]
	_ = x[ASSIGN-5]
	_ = x[PLUS-6]
	_ = x[MINUS-7]
	_ = x[BANG-8]
	_ = x[ASTERISK-9]
	_ = x[SLASH-10]
	_ = x[LT-11]
	_ = x[GT-12]
	_ = x[EQ-13]
	_ = x[NOT_EQ-14]
	_ = x[COMMA-15]
	_ = x[SEMICOLON-16]
	_ = x[COLON-17]
	_ = x[LPAREN-18]
	_ = x[RPAREN-19]
	_ = x[LBRACE-20]
	_ = x[RBRACE-21]
	_ = x[LBRACKET-22]
	_ = x[RBRACKET-23]
	_ = x[FUNCTION-24]
	_ = x[LET-25]
	_ = x[TRUE-26]
	_ = x[FALSE-27]
	_ = x[IF-28]
	_ = x[ELSE-29]
	_ = x[RETURN-30]
}

const _TokenType_name = "ILLEGALEOFIDENTIFIERINTSTRINGASSIGNPLUSMINUSBANGASTERISKSLASHLTGTEQNOT_EQCOMMASEMICOLONCOLONLPARENRPARENLBRACERBRACELBRACKETRBRACKETFUNCTIONLETTRUEFALSEIFELSERETURN"

var _TokenType_index = [...]uint8{0, 7, 10, 20, 23, 29, 35, 39, 44, 48, 56, 61, 63, 65, 67, 73, 78, 87, 92, 98, 104, 110, 116, 124, 132, 140, 143, 147, 152, 154, 158, 164}

func (i TokenType) String() string {
	if i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
